{"version":3,"sources":["components/Template.js","components/TodoInsert.js","components/TodoItem.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Template","children","todoLength","className","TodoInsert","selectedTodo","onInsertToggle","onInsertTodo","onRemove","onUpdate","useState","value","setValue","useEffect","text","onClick","onSubmit","id","e","preventDefault","placeholder","onChange","target","type","TodoItem","todo","onCheckToggle","onChangeSelectedTodo","checked","TodoList","todos","map","App","setSelectedTodo","insertToggle","setInsertToggle","setTodos","nextId","setNextId","prev","fetch","then","res","json","data","length","alert","concat","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAEe,SAASA,EAAT,GAA6C,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAC3C,OACE,sBAAKC,UAAU,WAAf,UACE,sBAAKA,UAAU,QAAf,+CAAiCD,EAAjC,OACA,8BAAMD,O,wBCDG,SAASG,EAAT,GAMX,IALFC,EAKC,EALDA,aACAC,EAIC,EAJDA,eACAC,EAGC,EAHDA,aACAC,EAEC,EAFDA,SACAC,EACC,EADDA,SACC,EACyBC,mBAAS,IADlC,mBACMC,EADN,KACaC,EADb,KAoBD,OANAC,qBAAU,WACJR,GACFO,EAASP,EAAaS,QAEvB,CAACT,IAGF,gCACE,qBAAKF,UAAU,aAAaY,QAAST,IACrC,uBACEU,SACEX,EACI,WACEI,EAASJ,EAAaY,GAAIN,IApBvB,SAAAO,GACfA,EAAEC,iBACFZ,EAAaI,GACbC,EAAS,IACTN,KAYE,UASE,uBACEc,YAAY,cACZT,MAAOA,EACPU,SAhCS,SAAAH,GACfN,EAASM,EAAEI,OAAOX,UAiCbN,EACC,sBAAKF,UAAU,UAAf,UACE,cAAC,IAAD,CACEY,QAAS,WACPN,EAASJ,EAAaY,GAAIN,MAG9B,cAAC,IAAD,CACEI,QAAS,WACPP,EAASH,EAAaY,UAK5B,wBAAQM,KAAK,SAAb,SACE,cAAC,IAAD,Y,MC5DG,SAASC,EAAT,GAKX,IAJFC,EAIC,EAJDA,KACAC,EAGC,EAHDA,cACApB,EAEC,EAFDA,eACAqB,EACC,EADDA,qBAEQV,EAAsBQ,EAAtBR,GAAIH,EAAkBW,EAAlBX,KAAMc,EAAYH,EAAZG,QAElB,OACE,qBAAKzB,UAAU,WAAf,SACE,sBAAKA,UAAS,kBAAayB,EAAU,UAAY,IAAjD,UACGA,EACC,cAAC,IAAD,CACEb,QAAS,WACPW,EAAcT,MAIlB,cAAC,IAAD,CACEF,QAAS,WACPW,EAAcT,MAIpB,qBACEd,UAAU,OACVY,QAAS,WACPY,EAAqBF,GACrBnB,KAJJ,SAOGQ,S,MC/BI,SAASe,EAAT,GAKX,IAJFC,EAIC,EAJDA,MACAJ,EAGC,EAHDA,cACApB,EAEC,EAFDA,eACAqB,EACC,EADDA,qBAEA,OACE,qBAAKxB,UAAU,WAAf,SACG2B,EAAMC,KAAI,SAAAN,GAAI,OACb,cAAC,EAAD,CACEA,KAAMA,EAENC,cAAeA,EACfpB,eAAgBA,EAChBqB,qBAAsBA,GAHjBF,EAAKR,S,MCTL,SAASe,IAAO,IAAD,EACYtB,mBAAS,MADrB,mBACrBL,EADqB,KACP4B,EADO,OAEYvB,oBAAS,GAFrB,mBAErBwB,EAFqB,KAEPC,EAFO,OAGFzB,mBAAS,IAHP,mBAGrBoB,EAHqB,KAGdM,EAHc,OAIA1B,mBAAS,GAJT,mBAIrB2B,EAJqB,KAIbC,EAJa,KAkB5B,SAAShC,IACHD,GACF4B,EAAgB,MAElBE,GAAgB,SAAAI,GAAI,OAAKA,KAyC3B,OAzDA1B,qBAAU,WACR2B,MAAM,oDACHC,MAAK,SAAAC,GACJ,OAAOA,EAAIC,UAEZF,MAAK,SAAAG,GACJR,EAASQ,EAAKd,OACdQ,EAAUM,EAAKd,MAAMe,OAAS,QAEjC,IAiDD,eAAC,EAAD,CAAU3C,WAAY4B,EAAMe,OAA5B,UACE,cAAC,EAAD,CACEf,MAAOA,EACPJ,cA5BN,SAAuBT,GACrBmB,GAAS,SAAAN,GAAK,OACZA,EAAMC,KAAI,SAAAN,GAAI,OACZA,EAAKR,KAAOA,EAAZ,2BAAsBQ,GAAtB,IAA4BG,SAAUH,EAAKG,UAAYH,SA0BvDnB,eAAgBA,EAChBqB,qBAtBN,SAA8BF,GAC5BQ,EAAgBR,MAuBd,qBAAKtB,UAAU,eAAeY,QAAST,EAAvC,SACE,cAAC,IAAD,MAED4B,GACC,cAAC,EAAD,CACE7B,aAAcA,EACdC,eAAgBA,EAChBC,aArDR,SAAsBO,GACpB,GAAa,KAATA,EACF,OAAOgC,MAAM,6DAEb,IAAMrB,EAAO,CACXR,GAAIoB,EACJvB,OACAc,SAAS,GAEXQ,GAAS,SAAAN,GAAK,OAAIA,EAAMiB,OAAOtB,MAC/Ba,EAAUD,EAAS,IA4Cf7B,SA5BR,SAAkBS,GAChBX,IACA8B,GAAS,SAAAN,GAAK,OAAIA,EAAMkB,QAAO,SAAAvB,GAAI,OAAIA,EAAKR,KAAOA,SA2B7CR,SAxBR,SAAkBQ,EAAIH,GACpBR,IACA8B,GAAS,SAAAN,GAAK,OACZA,EAAMC,KAAI,SAAAN,GAAI,OAAKA,EAAKR,KAAOA,EAAZ,2BAAsBQ,GAAtB,IAA4BX,SAASW,c,UCpD/CwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4069620a.chunk.js","sourcesContent":["import './Template.css';\n\nexport default function Template({ children, todoLength }) {\n  return (\n    <div className=\"Template\">\n      <div className=\"title\">오늘의 할 일 ({todoLength})</div>\n      <div>{children}</div>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { MdAddCircle } from 'react-icons/md';\nimport { TiTrash, TiPencil } from 'react-icons/ti';\nimport './TodoInsert.css';\n\nexport default function TodoInsert({\n  selectedTodo,\n  onInsertToggle,\n  onInsertTodo,\n  onRemove,\n  onUpdate,\n}) {\n  const [value, setValue] = useState('');\n\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    onInsertTodo(value);\n    setValue('');\n    onInsertToggle();\n  };\n\n  useEffect(() => {\n    if (selectedTodo) {\n      setValue(selectedTodo.text);\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div>\n      <div className=\"background\" onClick={onInsertToggle}></div>\n      <form\n        onSubmit={\n          selectedTodo\n            ? () => {\n                onUpdate(selectedTodo.id, value);\n              }\n            : onSubmit\n        }\n      >\n        <input\n          placeholder=\"please type\"\n          value={value}\n          onChange={onChange}\n        ></input>\n        {selectedTodo ? (\n          <div className=\"rewrite\">\n            <TiPencil\n              onClick={() => {\n                onUpdate(selectedTodo.id, value);\n              }}\n            />\n            <TiTrash\n              onClick={() => {\n                onRemove(selectedTodo.id);\n              }}\n            />\n          </div>\n        ) : (\n          <button type=\"submit\">\n            <MdAddCircle />\n          </button>\n        )}\n      </form>\n    </div>\n  );\n}\n","import { MdCheckBox, MdCheckBoxOutlineBlank } from 'react-icons/md';\nimport './TodoItem.css';\n\nexport default function TodoItem({\n  todo,\n  onCheckToggle,\n  onInsertToggle,\n  onChangeSelectedTodo,\n}) {\n  const { id, text, checked } = todo;\n\n  return (\n    <div className=\"TodoItem\">\n      <div className={`content ${checked ? 'checked' : ''}`}>\n        {checked ? (\n          <MdCheckBox\n            onClick={() => {\n              onCheckToggle(id);\n            }}\n          />\n        ) : (\n          <MdCheckBoxOutlineBlank\n            onClick={() => {\n              onCheckToggle(id);\n            }}\n          />\n        )}\n        <div\n          className=\"text\"\n          onClick={() => {\n            onChangeSelectedTodo(todo);\n            onInsertToggle();\n          }}\n        >\n          {text}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { TodoItem } from '../components';\nimport './TodoList.css';\n\nexport default function TodoList({\n  todos,\n  onCheckToggle,\n  onInsertToggle,\n  onChangeSelectedTodo,\n}) {\n  return (\n    <div className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoItem\n          todo={todo}\n          key={todo.id}\n          onCheckToggle={onCheckToggle}\n          onInsertToggle={onInsertToggle}\n          onChangeSelectedTodo={onChangeSelectedTodo}\n        />\n      ))}\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { Template, TodoList, TodoInsert } from './components';\nimport { MdAddCircle } from 'react-icons/md';\nimport './App.css';\n\nexport default function App() {\n  const [selectedTodo, setSelectedTodo] = useState(null);\n  const [insertToggle, setInsertToggle] = useState(false);\n  const [todos, setTodos] = useState([]); // 할 일 목록\n  const [nextId, setNextId] = useState(0); // Todo item id 증가\n\n  useEffect(() => {\n    fetch('https://minix-api.github.io/api/todo-app/db.json')\n      .then(res => {\n        return res.json();\n      })\n      .then(data => {\n        setTodos(data.todos);\n        setNextId(data.todos.length + 1);\n      });\n  }, []);\n\n  // Todo Item 추가\n  function onInsertToggle() {\n    if (selectedTodo) {\n      setSelectedTodo(null);\n    }\n    setInsertToggle(prev => !prev);\n  }\n\n  function onInsertTodo(text) {\n    if (text === '') {\n      return alert('할 일을 입력해주세요.');\n    } else {\n      const todo = {\n        id: nextId,\n        text,\n        checked: false,\n      };\n      setTodos(todos => todos.concat(todo));\n      setNextId(nextId + 1);\n    }\n  }\n\n  function onCheckToggle(id) {\n    setTodos(todos =>\n      todos.map(todo =>\n        todo.id === id ? { ...todo, checked: !todo.checked } : todo\n      )\n    );\n  }\n\n  function onChangeSelectedTodo(todo) {\n    setSelectedTodo(todo);\n  }\n\n  function onRemove(id) {\n    onInsertToggle();\n    setTodos(todos => todos.filter(todo => todo.id !== id));\n  }\n\n  function onUpdate(id, text) {\n    onInsertToggle();\n    setTodos(todos =>\n      todos.map(todo => (todo.id === id ? { ...todo, text } : todo))\n    );\n  }\n\n  return (\n    <Template todoLength={todos.length}>\n      <TodoList\n        todos={todos}\n        onCheckToggle={onCheckToggle}\n        onInsertToggle={onInsertToggle}\n        onChangeSelectedTodo={onChangeSelectedTodo}\n      />\n      <div className=\"add-todo-btn\" onClick={onInsertToggle}>\n        <MdAddCircle />\n      </div>\n      {insertToggle && (\n        <TodoInsert // Todo 추가 컴포넌트 (팝업)\n          selectedTodo={selectedTodo}\n          onInsertToggle={onInsertToggle}\n          onInsertTodo={onInsertTodo}\n          onRemove={onRemove}\n          onUpdate={onUpdate}\n        />\n      )}\n    </Template>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}